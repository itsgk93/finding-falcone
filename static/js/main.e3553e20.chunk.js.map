{"version":3,"sources":["components/vehicle/Vehicle.js","components/actions/actionType.js","components/utils/endpoints.js","components/actions/actionCreator.js","components/planet/Planet.js","components/home/Home.js","components/FinalPage.js","components/utils/Error.js","components/utils/Loading.js","components/sections/header/Header.js","components/sections/footer/Footer.js","components/Root.js","App.js","serviceWorker.js","components/reducers/appReducer.js","store.js","index.js"],"names":["Vehicle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeHandler","event","currentVehicle","parseInt","target","value","updateVehicle","setState","selected_vehicle","state","_this2","vehicles","map","vehicle","index","name","id","val","className","disabled","total_no","distance","max_distance","react_default","a","createElement","key","htmlFor","type","onChange","Component","PENDING","ERROR","FULFILLED","SEARCHING","SEARCHED","UPDATE_TIME","ADD_QUANTITY","SUB_QUANTITY","vehicles_url","planets_url","token_url","find_url","headers","Accept","Content-Type","error","err","payload","status","reset","dispatch","data","planets","time","fetch","then","res","json","getData","fulfilled","catch","findfalcone","method","body","token","JSON","stringify","undefined","console","log","selected","forEach","item","MAX_VEHICLES","Planet","cur_vehicle","speed","prev_vehicle","addQuantity","updateTime","subQuantity","cur_planet","prev_planet","selected_planet","prevState","planet","Vehicle_Vehicle","connect","ownProps","HomePage","_Component","findFalcone","planet_names","vehicle_names","store","push","count","inherits","createClass","components_planet_Planet","onClick","planetsSelected","FinalPage","_this$props$store","planetName","planet_name","Error","message","Loading","Header","href","Footer","Root","isProblemSolved","isLoading","isError","trim","length","Header_Header","Loading_Loading","FinalPage_FinalPage","Error_Error","home_Home","Footer_Footer","App","components_Root","Boolean","window","location","hostname","match","initState","updateVehicleStatus","increment_by","prev_quantity","new_quantity","toConsumableArray","objectSpread","updatePlanetStatus","appReducer","arguments","action","new_time","middleware","thunk","createStore","applyMiddleware","apply","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3553e20.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Vehicle.css\";\r\n\r\nexport default class Vehicle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected_vehicle: -1,\r\n    };\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    const currentVehicle = parseInt(event.target.value);\r\n    this.props.updateVehicle(currentVehicle);\r\n    this.setState({ selected_vehicle: currentVehicle });\r\n  };\r\n\r\n  render() {\r\n    const vehicles = this.props.vehicles\r\n      ? this.props.vehicles.map((vehicle, index) => {\r\n          const name = \"vehicle\" + this.props.id;\r\n          const val = \"\" + index;\r\n          let className = \"radio left\";\r\n          let disabled = false;\r\n          if (\r\n            (vehicle.total_no == 0 ||\r\n              this.props.distance > vehicle.max_distance) &&\r\n            this.state.selected_vehicle != index\r\n          ) {\r\n            className = className + \" disabled\";\r\n            disabled = true;\r\n          }\r\n          return (\r\n            <div key={index} className={className}>\r\n              <label htmlFor={vehicle.name}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={name}\r\n                  value={val}\r\n                  onChange={this.changeHandler}\r\n                  disabled={disabled}\r\n                />\r\n                {vehicle.name} ({vehicle.total_no})\r\n              </label>\r\n              <br />\r\n            </div>\r\n          );\r\n        })\r\n      : null;\r\n\r\n    return <div>{vehicles}</div>;\r\n  }\r\n}\r\n","export const PENDING = \"PENDING\";\r\nexport const ERROR = \"ERROR\";\r\nexport const FULFILLED = \"FULFILLED\";\r\nexport const SEARCHING = \"SEARCHING\";\r\nexport const SEARCHED = \"SEARCHED\";\r\nexport const UPDATE_TIME = \"UPDATE_TIME\";\r\nexport const ADD_QUANTITY = \"ADD_QUANTITY\";\r\nexport const SUB_QUANTITY = \"SUB_QUANTITY\";\r\nexport const FETCH = \"FETCH\";\r\n","export const vehicles_url = 'https://findfalcone.herokuapp.com/vehicles';\nexport const planets_url  = 'https://findfalcone.herokuapp.com/planets'; \nexport const token_url    = \"https://findfalcone.herokuapp.com/token\";\nexport const find_url     = \"https://findfalcone.herokuapp.com/find\";\n","import {\r\n  UPDATE_TIME,\r\n  ADD_QUANTITY,\r\n  SUB_QUANTITY,\r\n  PENDING,\r\n  FULFILLED,\r\n  ERROR,\r\n  SEARCHED,\r\n  SEARCHING,\r\n} from \"./actionType\";\r\nimport { vehicles_url, planets_url } from \"../utils/endpoints\";\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nexport function addQuantity(index, type) {\r\n  return {\r\n    type: ADD_QUANTITY,\r\n    payload: {\r\n      type: type,\r\n      index: index,\r\n    },\r\n  };\r\n}\r\nexport function subQuantity(index, type) {\r\n  return {\r\n    type: SUB_QUANTITY,\r\n    payload: {\r\n      type: type,\r\n      index: index,\r\n    },\r\n  };\r\n}\r\n\r\nexport function searching() {\r\n  return {\r\n    type: SEARCHING,\r\n    payload: { status: \"Searching\" },\r\n  };\r\n}\r\n\r\nexport function searched(data) {\r\n  if (data.status == undefined) {\r\n    // api doesn't return status in case of error, so add it\r\n    data.status = \"error\";\r\n  }\r\n  return {\r\n    type: SEARCHED,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function updateTime(val) {\r\n  return {\r\n    type: UPDATE_TIME,\r\n    payload: {\r\n      time: val,\r\n    },\r\n  };\r\n}\r\n\r\nexport function pending() {\r\n  return {\r\n    type: PENDING,\r\n    payload: {\r\n      status: \"Loading\",\r\n    },\r\n  };\r\n}\r\n\r\nexport function error(err) {\r\n  return {\r\n    type: ERROR,\r\n    payload: {\r\n      status: \"error\",\r\n      error: err,\r\n    },\r\n  };\r\n}\r\n\r\nexport function fulfilled(data) {\r\n  return {\r\n    type: FULFILLED,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function reset() {\r\n  return (dispatch) => {\r\n    dispatch(pending()); // change status to pending\r\n    const data = {\r\n      vehicles: [],\r\n      planets: [],\r\n      time: 0,\r\n      status: \"fulfilled\",\r\n      error: \"\",\r\n    };\r\n    fetch(vehicles_url)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        data.vehicles = getData(res, 0);\r\n        return fetch(planets_url);\r\n      })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        data.planets = getData(res, false);\r\n        dispatch(fulfilled(data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(error(err));\r\n      });\r\n  };\r\n}\r\n\r\nexport function findfalcone(token_url, find_url, data) {\r\n  return (dispatch) => {\r\n    dispatch(searching()); \r\n\r\n    fetch(token_url, {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: \"\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        data.token = res.token;\r\n        const body = JSON.stringify(data);\r\n\r\n        return fetch(find_url, {\r\n          method: \"POST\",\r\n          headers: headers,\r\n          body: body,\r\n        });\r\n      })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        dispatch(searched(res));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch(error(err));\r\n      });\r\n  };\r\n}\r\n\r\nfunction getData(data, selected) {\r\n  data.forEach((item) => {\r\n    item.selected = selected;\r\n  });\r\n  return data;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Vehicle from \"../vehicle/Vehicle\";\r\nimport \"./Planet.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addQuantity, subQuantity, updateTime } from \"../actions/actionCreator\";\r\n\r\nconst MAX_VEHICLES = 4;\r\n\r\nclass Planet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: 0,\r\n      distance: 0,\r\n      time: 0,\r\n      selected_planet: -1,\r\n      selected_vehicle: -1,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ id: this.props.id });\r\n  }\r\n\r\n  updateVehicle = (cur_vehicle) => {\r\n    const time =\r\n      cur_vehicle !== -1\r\n        ? this.state.distance / this.props.vehicles[cur_vehicle].speed\r\n        : 0;\r\n    const prev_vehicle = this.state.selected_vehicle;\r\n    if (prev_vehicle !== -1) {\r\n      this.props.addQuantity(prev_vehicle, \"vehicle\");\r\n      this.props.updateTime(-this.state.time);\r\n    }\r\n    if (cur_vehicle !== -1) {\r\n      this.props.subQuantity(cur_vehicle, \"vehicle\");\r\n      this.props.updateTime(time);\r\n    }\r\n\r\n    this.setState({ selected_vehicle: cur_vehicle, time: time });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    const cur_planet = parseInt(event.target.value);\r\n    const distance =\r\n      cur_planet !== -1 ? this.props.planets[cur_planet].distance : 0;\r\n    const prev_planet = this.state.selected_planet;\r\n    if (prev_planet !== -1) {\r\n      this.props.addQuantity(prev_planet, \"planet\");\r\n    }\r\n    if (cur_planet !== -1) {\r\n      this.props.subQuantity(cur_planet, \"planet\");\r\n    }\r\n    this.props.addQuantity(this.state.selected_vehicle, \"vehicle\");\r\n    this.props.updateTime(-this.state.time);\r\n    this.setState((prevState) => {\r\n      return {\r\n        id: prevState.id + MAX_VEHICLES, // for any change in planets update key for re render vehicles\r\n        selected_vehicle: -1,\r\n        time: 0,\r\n        selected_planet: cur_planet,\r\n        distance: distance,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const planets = this.props.planets\r\n      ? this.props.planets.map((planet, index) => {\r\n          let id = \"\" + index;\r\n          if (!planet.selected || this.state.selected_planet == id) {\r\n            return (\r\n              <option key={id} value={id}>\r\n                {planet.name}{\" \"}\r\n              </option>\r\n            );\r\n          }\r\n        })\r\n      : null;\r\n\r\n    return (\r\n      <div>\r\n        <select\r\n          onChange={this.changeHandler}\r\n          value={\"\" + this.state.selected_planet}\r\n        >\r\n          <option value=\"-1\">Select</option>\r\n          {planets}\r\n        </select>\r\n        {this.state.selected_planet !== -1 ? (\r\n          <Vehicle\r\n            id={this.state.id}\r\n            key={this.state.id}\r\n            vehicles={this.props.vehicles}\r\n            updateVehicle={this.updateVehicle}\r\n            distance={this.state.distance}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    vehicles: state.vehicles,\r\n    planets: state.planets,\r\n    id: ownProps.id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addQuantity: (index, type) => {\r\n      dispatch(addQuantity(index, type));\r\n    },\r\n    subQuantity: (index, type) => {\r\n      dispatch(subQuantity(index, type));\r\n    },\r\n    updateTime: (val) => {\r\n      dispatch(updateTime(val));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Planet);\r\n","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport Planet from \"../planet/Planet\";\r\nimport { connect } from \"react-redux\";\r\nimport { findfalcone } from \"../actions/actionCreator\";\r\nimport { token_url, find_url } from \"../utils/endpoints\";\r\n\r\nconst MAX_PLANETS = 4;\r\n\r\nexport class HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  findFalcone = () => {\r\n    let planet_names = [];\r\n    let vehicle_names = [];\r\n    this.props.store.planets.forEach((planet) => {\r\n      if (planet.selected) {\r\n        planet_names.push(planet.name);\r\n      }\r\n    });\r\n    this.props.store.vehicles.forEach((vehicle) => {\r\n      if (vehicle.selected > 0) {\r\n        let count = vehicle.selected;\r\n        while (count > 0) {\r\n          vehicle_names.push(vehicle.name);\r\n          count--;\r\n        }\r\n      }\r\n    });\r\n    const body = {\r\n      token: \"\",\r\n      planet_names: planet_names,\r\n      vehicle_names: vehicle_names,\r\n    };\r\n    this.props.findfalcone(token_url, find_url, body);\r\n  };\r\n\r\n  planetsSelected() {\r\n    let count = 0;\r\n    this.props.store.vehicles.forEach((vehicle) => {\r\n      count = count + vehicle.selected;\r\n    });\r\n    return count == MAX_PLANETS;\r\n  }\r\n\r\n  render() {\r\n    let planets = [];\r\n\r\n    for (let id = 1; id <= MAX_PLANETS; id++) {\r\n      const key = id;\r\n\r\n      planets.push(\r\n        <div className=\"w-20\" key={key}>\r\n          <b className=\"text_bold\">Destination {id}</b>\r\n          <Planet id={key} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <center>\r\n          <h3 className=\"py-5\">Select planets you want to search in</h3>\r\n        </center>\r\n        <div className=\"row\">\r\n          {planets}\r\n          <div className=\"w-20\">\r\n            <b className=\"text_bold stick_right\">\r\n              Time taken : {this.props.store.time}\r\n            </b>\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <center className=\"my-5\">\r\n          <button\r\n            className=\"btn badge badge-secondary\"\r\n            onClick={this.findFalcone}\r\n            disabled={this.planetsSelected() ? false : true}\r\n          >\r\n            Find Falcone\r\n          </button>\r\n          <br />\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    store: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    findfalcone: (token_url, find_url, data) => {\r\n      dispatch(findfalcone(token_url, find_url, data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class FinalPage extends Component {\r\n  render() {\r\n    const { status, time } = this.props.store;\r\n    const planetName =\r\n      status === \"success\" ? (\r\n        <p>Planet found : {this.props.store.planet_name}</p>\r\n      ) : null;\r\n    return (\r\n      <div>\r\n        <center>\r\n          <p>\r\n            {status == \"success\"\r\n              ? \"Success ! Congratulation on Finding Falcone. King Shan is mighty pleased.\"\r\n              : \"Oops ! Better Luck Next Time\"}\r\n          </p>\r\n          <br />\r\n          <p>Time taken : {time}</p>\r\n          {status === \"success\" ? planetName : null}\r\n          <br />\r\n          <p>\r\n            <button\r\n              className=\"btn badge badge-secondary \"\r\n              onClick={this.props.reset}\r\n            >\r\n              Start Again\r\n            </button>\r\n            <br />\r\n          </p>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Error extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <center>\r\n          <h1>Error !!  </h1>\r\n          <p>{this.props.message}</p>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <center>\r\n          <h3>{this.props.message}...</h3>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Header.css\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-secondary\">\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\"></div>\r\n        <a\r\n          className=\"nav-link navbar-brand\"\r\n          href=\"#\"\r\n          onClick={this.props.reset}\r\n        >\r\n          {\" \"}\r\n          Reset <span className=\"sr-only\">(current)</span>\r\n        </a>\r\n        <a className=\"navbar-brand\" href=\"https://www.geektrust.in\">\r\n          GeekTrust{\" \"}\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Footer.css'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"col-sm-12 last\">\r\n                    <div className=\"container\">\r\n                            <div className=\"col-sm-12 footer\">\r\n                                <span> Coding Problem  - www.geektrust.in/finding-falcone </span>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport HomePage from \"./home/Home\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset } from \"./actions/actionCreator\";\r\nimport FinalPage from \"./FinalPage\";\r\nimport Error from \"./utils/Error\";\r\nimport Loading from \"./utils/Loading\";\r\nimport Header from \"./sections/header/Header\";\r\nimport Footer from \"./sections/footer/Footer\";\r\n\r\nclass Root extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: 1,\r\n    };\r\n  }\r\n\r\n  reset = () => {\r\n    this.props.reset();\r\n    this.setState((prevState) => {\r\n      return {\r\n        id: prevState.id + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.reset();\r\n  }\r\n\r\n  isProblemSolved = () => {\r\n    if (\r\n      this.props.store.status == \"success\" ||\r\n      this.props.store.status == \"false\"\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  isLoading = () => {\r\n    const { status } = this.props.store;\r\n    return status == \"Loading\" || status == \"Searching\";\r\n  };\r\n\r\n  isError = () => {\r\n    console.log(this.props.store.error);\r\n    return this.props.store.error.trim().length > 0;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header reset={this.reset} />\r\n        <div className=\"container-fluid\">\r\n          <center>\r\n            <h1 className=\"my-3\">Finding Falcone!</h1>\r\n          </center>\r\n          {this.isLoading() ? (\r\n            <Loading message={this.props.store.status} />\r\n          ) : null}\r\n          {this.isProblemSolved() ? (\r\n            <FinalPage reset={this.reset} store={this.props.store} />\r\n          ) : null}\r\n          {this.isError() ? <Error message={this.props.store.error} /> : null}\r\n          {!this.isProblemSolved() && !this.isError() && !this.isLoading() ? (\r\n            <HomePage key={this.state.id} />\r\n          ) : null}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    store: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    reset: () => {\r\n      dispatch(reset());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Root);\r\n","import React from \"react\";\r\nimport Root from \"./components/Root\";\r\n\r\nfunction App() {\r\n  return <Root />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  UPDATE_TIME,\r\n  ADD_QUANTITY,\r\n  SUB_QUANTITY,\r\n  PENDING,\r\n  FULFILLED,\r\n  ERROR,\r\n  SEARCHED,\r\n  SEARCHING,\r\n} from \"../actions/actionType\";\r\n\r\nconst initState = {\r\n  vehicles: [],\r\n  planets: [],\r\n  time: 0,\r\n  status: \"\",\r\n  error: \"\",\r\n};\r\n\r\nconst appReducer = (state = initState, action) => {\r\n  if (action.type === ADD_QUANTITY) {\r\n    if (action.payload.index < 0) {\r\n      return { ...state };\r\n    }\r\n    if (action.payload.type === \"vehicle\") {\r\n      return updateVehicleStatus(action.payload.index, 1, state);\r\n    }\r\n    if (action.payload.type === \"planet\") {\r\n      return updatePlanetStatus(action.payload.index, false, state);\r\n    }\r\n  }\r\n  if (action.type === SUB_QUANTITY) {\r\n    if (action.payload.index < 0) {\r\n      return { ...state };\r\n    }\r\n    if (action.payload.type === \"vehicle\") {\r\n      return updateVehicleStatus(action.payload.index, -1, state);\r\n    }\r\n    if (action.payload.type === \"planet\") {\r\n      return updatePlanetStatus(action.payload.index, true, state);\r\n    }\r\n  }\r\n  if (action.type === UPDATE_TIME) {\r\n    const new_time = state.time + action.payload.time;\r\n    return {\r\n      ...state,\r\n      time: new_time,\r\n    };\r\n  }\r\n  if (\r\n    action.type === PENDING ||\r\n    action.type === ERROR ||\r\n    action.type === FULFILLED ||\r\n    action.type === SEARCHING ||\r\n    action.type === SEARCHED\r\n  ) {\r\n    return {\r\n      ...state,\r\n      ...action.payload,\r\n    };\r\n  }\r\n\r\n  return { ...state };\r\n};\r\n\r\nfunction updateVehicleStatus(index, increment_by, prevState) {\r\n  let prev_quantity = prevState.vehicles[index].total_no;\r\n  let new_quantity =\r\n    prev_quantity + increment_by >= 0\r\n      ? prev_quantity + increment_by\r\n      : prev_quantity;\r\n  let vehicles = [...prevState.vehicles];\r\n  vehicles[index].total_no = new_quantity;\r\n  vehicles[index].selected =\r\n    vehicles[index].selected - (new_quantity - prev_quantity);\r\n  return {\r\n    ...prevState,\r\n    vehicles,\r\n  };\r\n}\r\n\r\nfunction updatePlanetStatus(index, selected, prevState) {\r\n  let planets = [...prevState.planets];\r\n  planets[index].selected = selected;\r\n  return {\r\n    ...prevState,\r\n    planets,\r\n  };\r\n}\r\n\r\nexport default appReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { default as thunk } from \"redux-thunk\";\r\nimport appReducer from \"./components/reducers/appReducer\";\r\nconst middleware = [thunk];\r\nexport default createStore(appReducer, applyMiddleware(...middleware));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}